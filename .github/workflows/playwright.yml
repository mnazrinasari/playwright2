name: Deploy Playwright Report to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:

# Set permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: npm run test
      continue-on-error: true
    
    - name: Compress HTML report
      if: always()
      run: |
        # Create compressed version of the HTML report
        if [ -f "playwright-report/index.html" ]; then
          echo "Original report size:"
          ls -lh playwright-report/index.html
          
          # Compress the main HTML file
          gzip -c playwright-report/index.html > playwright-report/index.html.gz
          
          # Create a lightweight HTML file that serves the compressed version
          cat > playwright-report/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Playwright Test Report</title>
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 20px;
                    line-height: 1.6;
                }
                .container {
                    text-align: center;
                    margin-top: 100px;
                }
                .btn {
                    display: inline-block;
                    padding: 12px 24px;
                    background: #0969da;
                    color: white;
                    text-decoration: none;
                    border-radius: 6px;
                    margin: 10px;
                    transition: background 0.2s;
                }
                .btn:hover {
                    background: #0860ca;
                }
                .info {
                    background: #f6f8fa;
                    border: 1px solid #d1d9e0;
                    border-radius: 6px;
                    padding: 16px;
                    margin: 20px 0;
                    text-align: left;
                }
                .timestamp {
                    color: #656d76;
                    font-size: 0.9em;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>üé≠ Playwright Test Report</h1>
                <p>Test report generated on <span class="timestamp">DATE_PLACEHOLDER</span></p>
                
                <div class="info">
                    <h3>üìä Quick Access</h3>
                    <p>The full interactive report is available in compressed format to improve loading times.</p>
                </div>
                
                <a href="report.html" class="btn">üìã View Full Report</a>
                <a href="index.html.gz" class="btn" download>‚¨áÔ∏è Download Report</a>
            </div>
            
            <script>
                // Replace date placeholder
                document.querySelector('.timestamp').textContent = new Date().toLocaleString();
                
                // Check if browser supports compressed content
                if (window.fetch) {
                    fetch('index.html.gz')
                        .then(response => {
                            if (response.ok) {
                                console.log('Compressed report available');
                            }
                        })
                        .catch(err => console.log('Compressed report not available'));
                }
            </script>
        </body>
        </html>
        EOF
          
          # Create the actual report viewer
          cat > playwright-report/report.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Loading Playwright Report...</title>
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    margin: 0;
                    padding: 20px;
                    background: #f6f8fa;
                }
                .loader {
                    text-align: center;
                    margin-top: 100px;
                }
                .spinner {
                    border: 4px solid #f3f3f3;
                    border-top: 4px solid #0969da;
                    border-radius: 50%;
                    width: 40px;
                    height: 40px;
                    animation: spin 1s linear infinite;
                    margin: 0 auto 20px;
                }
                @keyframes spin {
                    0% { transform: rotate(0deg); }
                    100% { transform: rotate(360deg); }
                }
                .error {
                    color: #d1242f;
                    background: #fff;
                    border: 1px solid #d1242f;
                    border-radius: 6px;
                    padding: 16px;
                    margin: 20px;
                    display: none;
                }
            </style>
        </head>
        <body>
            <div class="loader">
                <div class="spinner"></div>
                <p>Loading compressed report...</p>
            </div>
            <div class="error" id="error">
                <h3>‚ùå Error Loading Report</h3>
                <p>Unable to load the compressed report. You can try <a href="index.html.gz" download>downloading it directly</a>.</p>
            </div>
            
            <script>
                async function loadCompressedReport() {
                    try {
                        const response = await fetch('index.html.gz');
                        if (!response.ok) throw new Error('Failed to fetch compressed report');
                        
                        const compressedData = await response.arrayBuffer();
                        
                        // For modern browsers, we can decompress using streams
                        if ('DecompressionStream' in window) {
                            const stream = new DecompressionStream('gzip');
                            const decompressedResponse = new Response(
                                new Response(compressedData).body.pipeThrough(stream)
                            );
                            const html = await decompressedResponse.text();
                            
                            // Replace current document with decompressed HTML
                            document.open();
                            document.write(html);
                            document.close();
                        } else {
                            // Fallback: redirect to download
                            throw new Error('Browser does not support decompression');
                        }
                    } catch (error) {
                        console.error('Error loading compressed report:', error);
                        document.querySelector('.loader').style.display = 'none';
                        document.querySelector('.error').style.display = 'block';
                    }
                }
                
                // Load the compressed report
                loadCompressedReport();
            </script>
        </body>
        </html>
        EOF
          
          echo "Compressed report size:"
          ls -lh playwright-report/index.html.gz
          
          echo "New index.html size:"
          ls -lh playwright-report/index.html
        else
          echo "No HTML report found to compress"
        fi
    
    - name: Upload artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    
    - name: Set up Git configuration for gh-pages deployment
      if: always()
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
    
    - name: Clone gh-pages branch
      if: always()
      run: |
        git clone --single-branch --branch gh-pages https://github.com/${{ github.repository }} github-pages || {
          echo "gh-pages branch doesn't exist, creating it..."
          git clone https://github.com/${{ github.repository }} github-pages
          cd github-pages
          git checkout --orphan gh-pages
          git rm -rf .
          echo "# GitHub Pages" > README.md
          git add README.md
          git commit -m "Initial gh-pages commit"
          git push origin gh-pages
        }
    
    - name: Deploy to GitHub Pages
      if: always()
      run: |
        # Copy compressed report to gh-pages directory
        if [ -d "playwright-report" ]; then
          echo "Copying compressed report to gh-pages..."
          cp -r playwright-report/* github-pages/
          
          cd github-pages
          
          # Add timestamp to README
          echo "# Playwright Test Reports" > README.md
          echo "" >> README.md
          echo "Last updated: $(date)" >> README.md
          echo "" >> README.md
          echo "## How to View Reports" >> README.md
          echo "- **Quick View**: Visit the main page for a summary" >> README.md
          echo "- **Full Report**: Click 'View Full Report' for the complete interactive report" >> README.md
          echo "- **Download**: Download the compressed report file if needed" >> README.md
          
          # Set up git and commit
          git add .
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Deploy compressed HTML report - $(date '+%Y-%m-%d %H:%M:%S')"
            
            # Retry push up to 3 times with exponential backoff
            for i in {1..3}; do
              echo "Attempting to push to gh-pages (attempt $i/3)..."
              if git push origin gh-pages; then
                echo "‚úÖ Successfully pushed to gh-pages on attempt $i"
                break
              else
                echo "‚ùå Push failed on attempt $i"
                if [ $i -lt 3 ]; then
                  sleep_time=$((2**i))
                  echo "Waiting ${sleep_time} seconds before retry..."
                  sleep $sleep_time
                else
                  echo "‚ùå All push attempts failed"
                  exit 1
                fi
              fi
            done
          fi
        else
          echo "No playwright-report directory found"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Output Pages URL
      if: always()
      run: |
        echo "üöÄ Report deployed to GitHub Pages!"
        echo "üìä View at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        echo "üìÅ Repository: ${{ github.repository }}"
